package course6

object SuffixTreeRunner extends App {
  import SuffixTree._

  //val input = "3 9 0 4 7 1 10 5 2 6".split(" ").sorted
  //println(input mkString(" "))

  // Q5
  val in = "GTTATGCATGGCGTAGAACGTACACGCCGGCATTCAATTAGAGGGCGGTCAAACCTCAGGTTGAGCTCGTGTTCTGATCTTTAACGCCAACTAAGCCATGCCAGAGTATCCATGAGGTACCGTGCTATTTCAGGAATGCTGAATCTCGGGTATTGTGAATACGAAGTGCTTTTACGTTTCAAGCCTGAGGACCCAGTCCATGAGCAACATAGGCTATTTCAAATGCGCACTCCCCGCGAGCACGGGACGTCCTGCGATCCAGCGAACCGAGTTCGATTCGGTGTAATCCCTTCCCCAGTGCCACCGGATTGTACAGGAAAGACAACTTCATTGTATTGACCCGCTACTAGTGCTGCTATCGTGCCGTAATTCAACCGTTCGTAAGAGCCTGACAGGTTCAAAGAGCTGTTTTTTTCTCGTTGAAATTTGATCGAGGCGGGTGGGAGAGATGGCCTGAGTATCGCACAGAGGGGTGACTGGCCGAACGAGAGTAAGACGGGATCCATTAGACGATATGCTCTTTAATCGTCCGCCACGATCGCGCAATTGTAGGTCTGCCGAGTACGCGGCGAGGGGACGGTCCTGGCCAGACGTGCGCTTGACTGATATGCTCCGAGAGACAATAGCTGAGGCTAGTGCTGTGAGTTTTCTACTATCACTTGTATCGCGGCGCCGCATCACTAGGGAGGTGGGACGATGCACAATGAAAACGCAATGAAGGTACAAGGTCTTAAAAGACACGGGTCCCAACTACAATTCCCTTACGATTGGCTGGCCCCGTGCCCTTCGTGCTAGTAGCGGTGTATAGTGGGAGTGTCATCCCTGGATAACCCAAAACCTCCTACCCTGAGCAAGAATGCTAATTAAATTATAGGTACGGATGATCACTCTATCATCGCTGAAATATCTAAGATCCTGAAGGCCTTTAGGAACCGTAGTTTATAAGGCAA$"
  val text : (String, List[Int])= (in, (0 to in.length - 1).toList)


  println{ slideText(text)
    .map(r => (r._1, r._2.head))
    .sortBy(_._1).map(_._2).mkString(", ")
  }

//
//  val text = "ATAAATG"
//  implicit val trie = createTrie(slideText(text))
//  println( formattedPrint  )



  //implicit val result = createTrie( slideText("panamabananas$") )
  //println( formattedPrint  )
}
